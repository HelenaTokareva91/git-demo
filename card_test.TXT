
API Intents Payment
При использовании API Payment Intents с клиентскими библиотеками и SDK Stripe убедитесь, что:
Аутентификационные потоки запускаются при необходимости (используйте нормативные номера тестовых карт и PaymentMethods.)
Нет аутентификации (карта США по умолчанию): 4242 4242 4242 4242.
Требуется аутентификация: 4000 0027 6000 3184.
PaymentIntent создается с ключом идемпотентности, чтобы избежать ошибочного создания дубликата PaymentIntents для одной и той же покупки.
Ошибки отлавливаются и отображаются правильно в пользовательском интерфейсе.
API начислений
При использовании API Charges с клиентскими библиотеками и SDK Stripe убедитесь, что:
Элемент карты передается правильно для createToken в ваш обработчик отправки.
В обработчике ответа для createToken ошибки карты обрабатываются и отображаются правильно.
Только действительные токены передаются на ваш сервер при отправке платежной формы.
Серверный код
В своем коде на стороне сервера убедитесь, что:
Все запросы выполняются успешно. Может оказаться полезным просматривать события и журналы вашей учетной записи во время тестирования интеграции.
Все ошибки API обрабатываются правильно.
Соответствующие веб-крючки обрабатываются правильно.
Когда вы будете готовы к интеграции, замените свои тестовые публикуемые и секретные ключи API на действующие. Платежи в реальном времени не могут быть обработаны, если ваша интеграция все еще использует ваши тестовые ключи.
Номера тестовых карточек и токены
Информация о подлинной карте не может использоваться в тестовом режиме. Вместо этого используйте любой из следующих номеров тестовых карточек, действительную дату истечения срока действия в будущем и любой случайный номер CVC, чтобы создать успешный платеж.
4242424242424242
4000056655665556
5555555555554444
2223003122003222
5200828282828210
5105105105105100
378282246310005
371449635398431
6011111111111117
6011000990139424
3056930009020004
36227206271667
3566002020360505
6200000000000005
Страна выставления счета для каждой тестовой карты установлена в США. Если вам нужно создавать платежи по тестовой карте с использованием карт для других стран, выставляющих счета, используйте наши международные тестовые карты.
Мы рекомендуем использовать наши тестовые идентификаторы при тестировании интеграции и начислении платы вместо передачи информации о карте непосредственно в API. Использование этих тестовых идентификаторов вместо номеров карт помогает гарантировать, что ваша производственная интеграция разработана в соответствии с PCI и не будет обрабатывать информацию о картах напрямую. Каждый идентификатор теста читается человеком и представляет информацию о карте, которая была токенизирована с помощью наших клиентских библиотек (например, Stripe Elements, Stripe.js).
Международные номера тестовых карточек и токены
Вы можете использовать любую из следующих тестовых карт для имитации успешного платежа для разных стран выставления счетов.
4000000760000002
4000001240000000
4000004840008001
Нормативные номера тестовых карточек
Следующая информация о карте проверяет платежи, на которые влияют региональные правила, такие как строгая аутентификация клиентов (SCA). Используйте его для проверки сохраненных карт с помощью API Setup Intents.
4000002500003155
Эта карта требует аутентификации для одноразовых платежей. Однако, если вы настроили эту карту и использовали сохраненную карту для последующих внесессионных платежей, дальнейшая аутентификация не требуется. В режиме реального времени Stripe динамически определяет, когда для конкретной транзакции требуется проверка подлинности в соответствии с региональными правилами, такими как строгая проверка подлинности клиентов.
4000002760003184
Эта карта требует аутентификации во всех транзакциях, независимо от того, как настроена карта.
4000008260003178
Эта карта требует аутентификации для одноразовых платежей. Все платежи будут отклонены с кодом ошибки достаточной_функции даже после успешной аутентификации или предварительной настройки.
4000003800000446
Эта карта требует аутентификации для разовых и других внутрисессионных платежей. Однако все внесессионные платежи будут успешными, как если бы карта была предварительно настроена.
Номера и токены тестовой карты 3D Secure
Не все карты поддерживают 3D Secure или требуют, чтобы клиент был перенаправлен на страницу аутентификации эмитента карты. Используйте следующую информацию о карте для проверки платежей 3D Secure.
Номера карт Токены Способы оплаты
4000000000003220
Для успешной оплаты необходимо выполнить аутентификацию 3D Secure 2. По умолчанию ваши правила Radar запрашивают аутентификацию 3D Secure для этой карты.
4000000000003063
Для успешной оплаты необходимо выполнить аутентификацию 3D Secure. По умолчанию ваши правила Radar запрашивают аутентификацию 3D Secure для этой карты.
4000008400001629
Требуется аутентификация 3D Secure, но после аутентификации платежи будут отклонены с кодом ошибки card_declined. По умолчанию ваши правила Radar запрашивают аутентификацию 3D Secure для этой карты.
4000000000003055
Аутентификация 3D Secure может все еще выполняться, но не обязательна. По умолчанию ваши правила Radar не будут запрашивать 3D Secure аутентификацию для этой карты.
4242424242424242
3D Secure поддерживается для этой карты, но эта карта не зарегистрирована в 3D Secure. Это означает, что, если ваши правила Radar запрашивают 3D Secure, клиент не будет проходить дополнительную аутентификацию. По умолчанию ваши правила Radar не будут запрашивать 3D Secure аутентификацию для этой карты.
378282246310005
3D Secure не поддерживается на этой карте и не может быть вызван. PaymentIntent будет продолжен без выполнения аутентификации.
Все остальные тестовые карты Visa и Mastercard не требуют аутентификации от эмитента карты клиента.
Тестирование на конкретные ответы и ошибки
Следующие тестовые карты можно использовать для создания платежей, которые дают конкретные ответы - полезно для тестирования различных сценариев и кодов ошибок. Проверочные проверки запускаются только тогда, когда предоставлена необходимая информация (например, для того, чтобы установить cvc_check на неудачу, должен быть предоставлен код CVC).
4000000000000077
Заряд успешно завершен, и средства будут добавлены непосредственно на ваш доступный баланс (в обход отложенного баланса).
4000003720000278
Заряд успешно завершен, и средства будут добавлены непосредственно на ваш доступный баланс (в обход отложенного баланса).
4000000000000093
Зарядка выполняется успешно, и используется внутренняя цена (другие тестовые карты используют международные цены). Эта карта имеет значение только в странах с раздельным ценообразованием.
4000000000000010
Проверка address_line1_check и address_zip_check не удалась. Если в вашем аккаунте заблокированы платежи, не прошедшие проверку почтового индекса, плата будет отклонена.
4000000000000028
Зарядка прошла успешно, но проверка address_line1_check не удалась.
4000000000000036
Проверка address_zip_check не проходит. Если в вашем аккаунте заблокированы платежи, не прошедшие проверку почтового индекса, плата будет отклонена.
4000000000000044
Заряд успешно завершен, но проверки address_zip_check и address_line1_check недоступны.
4000000000005126
Заряд успешно завершен, но возврат захваченного заряда происходит асинхронно с помощью fail_reason карты expired_or_canceled_card. Обратите внимание, что, поскольку ошибки возврата являются асинхронными, возврат будет сначала казаться успешным и будет иметь статус ошибки только при последующих выборках. Мы также уведомляем вас о сбоях при возврате денег с помощью событияchar.refund.updated webhook.
4000000000000101
Если указан номер CVC, произойдет сбой cvc_check. Если в вашем аккаунте заблокированы платежи, не прошедшие проверку кода CVC, плата будет отклонена.
4000000000000341
Прикрепление этой карты к объекту Customer успешно, но попытка снять с клиента не удалась.
4000000000009235
Результатом является заряд с повышенным уровнем риска.
4000000000004954
Результатом является заряд с уровнем риска высшим.
4100000000000019
Результатом является заряд с уровнем риска высшим. Заряд заблокирован, так как считается мошенническим.
4000000000000002
Оплата отклоняется с помощью кода card_declined.
4000000000009995
Оплата отклоняется с помощью кода card_declined. Атрибут отклонения_кода является недостаточным_фундами.
4000000000009987
Оплата отклоняется с помощью кода card_declined. Атрибут dec_code является потерянной картой.
4000000000009979
Оплата отклоняется с помощью кода card_declined. Атрибут dec_code является украденной картой.
4000000000000069
Заряд отклоняется с помощью кода expired_card.
4000000000000127
Оплата отклоняется с помощью кода invalid_cvc.
4000000000000119
Оплата отклоняется с помощью кода processing_error.
4242424242424241
Оплата отклоняется с кодом неверного номера, так как номер карты не проходит проверку Luhn
По умолчанию передача адреса или данных CVC с номером карты приводит к успешному выполнению проверки адреса и CVC. Если эта информация не указана, значение проверок равно нулю. Любая дата истечения срока в будущем считается действительной.
Вы также можете указать недействительные данные карты для проверки определенных кодов ошибок, возникающих в результате предоставления неверной информации. Например:
invalid_expiry_month: использовать недействительный месяц (например, 13)
invalid_expiry_year: использовать год в прошлом (например, 1970)
invalid_cvc: используйте двузначное число (например, 99)
Споры
В тестовом режиме, вы можете использовать тестовые карты ниже, чтобы имитировать спорную сделку:
4000000000000259
С настройками учетной записи по умолчанию, платеж успешно завершен, и его оспаривают только как мошеннический. Этот тип спора защищен, если 3D Secure был запущен.
4000000000002685
При настройках учетной записи по умолчанию, платеж успешно завершен, только если его оспорить, так как продукт не получен. Этот тип спора не защищен, если 3D Secure была запущена.
4000000000001976
При настройках учетной записи по умолчанию начисление успешно завершено, и его можно оспорить только как запрос.
4000000000005423
С настройками учетной записи по умолчанию, оплата успешна, только чтобы получить раннее предупреждение о мошенничестве.
Следующее свидетельство, представленное в uncategorized_text, производит конкретные действия, которые полезны для тестирования потока споров:
Доказательство
Описание
winning_evidence
Спор закрыт и помечен как выигранный. На ваш счет зачисляется сумма комиссии и связанных с ней сборов.
losing_evidence
Спор закрыт и помечен как потерянный. Ваш аккаунт не зачислен.
Sleduyushch
Ограничения скорости
Для пользователей крайне маловероятно, что при нормальном использовании API могут возникнуть какие-либо ограничения скорости даже при большом объеме. Наиболее распространенными причинами, по которым пользователь испытывает ограничения скорости, являются ошибки, массовые выборки данных или тестирование экстремальной нагрузки.
Если ваши запросы начинают получать 429 ошибок HTTP, уменьшите частоту ваших запросов. Каждый неудавшийся запрос можно безопасно повторить, так как ограничение скорости происходит перед любым другим действием и препятствует обработке запроса. При уменьшении частоты ваших запросов мы рекомендуем экспоненциальный откат, сначала подождите одну секунду, а затем повторите попытку. Если ваш запрос продолжает получать тот же ответ, подождите две секунды, затем четыре секунды и т. Д.
Ограничение скорости в тестовом режиме ниже, чем в живом режиме. Если вы испытываете ограничения скорости, но не можете определить причину, сообщите нам об этом.
SEPA Прямой дебет
Вы можете создать тестовый PaymentIntent, который будет либо успешным, либо неудачным, выполнив следующие действия:
Создайте тестовый PaymentMethod с номером тестового счета.
Используйте полученный PaymentMethod в запросе verifySepaDebitPayment, чтобы создать тестовый платеж.
Тестовые номера счетов - пример(Italy)
IT40S0542811101000000123456
Статус PaymentIntent переходит от обработки к успешному.
IT60X0542811101000000123456
Статус PaymentIntent переходит от обработки к require_payment_method из-за сбоя платежа.
IT83S0542811101000000123458
Статус PaymentIntent переходит от обработки к выполнению, но спор немедленно создается.

